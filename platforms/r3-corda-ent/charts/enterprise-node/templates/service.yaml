##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

---
apiVersion: v1
kind: Service
metadata:
  name:  {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: node-service
    app.kubernetes.io/component: node
    app.kubernetes.io/part-of: {{ include "node.fullname" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/namespace: {{ .Release.Namespace }}
    app.kubernetes.io/release: {{ .Release.Name }}
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: node-statefulset
    app.kubernetes.io/component: node
    app.kubernetes.io/part-of: {{ include "node.fullname" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/namespace: {{ .Release.Namespace }}
    app.kubernetes.io/release: {{ .Release.Name }}
  ports:
  - port: {{ .Values.nodeConf.p2pPort }}
    targetPort: {{ .Values.nodeConf.p2pPort }}
    protocol: TCP
    name: p2p
  - port: {{ .Values.nodeConf.rpc.port }} 
    targetPort: {{ .Values.nodeConf.rpc.port }}
    protocol: TCP
    name: rpc
{{- if .Values.nodeConf.ssh.enabled }}
  - port: {{ .Values.nodeConf.ssh.sshdPort }} 
    targetPort: {{ .Values.nodeConf.ssh.sshdPort }}
    protocol: TCP
    name: ssh
{{- end }}
{{- if eq .Values.global.proxy.provider "ambassador" }}
---
## Host for doorman
apiVersion: getambassador.io/v3alpha1
kind: Host
metadata:
  name: {{ .Release.Name }}-node
spec:
  hostname: {{ .Release.Name }}.{{ .Values.global.proxy.externalUrlSuffix }}
  acmeProvider:
    authority: none
  requestPolicy:
    insecure:
      action: Reject
  tlsSecret:
    name: {{ .Release.Name }}-tls-certs
    namespace: {{ .Release.Namespace }}
---
## Mapping for nms port
apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  name: {{ .Release.Name }}-mapping
  namespace: {{ .Release.Namespace }}
spec:
  host: {{ .Release.Name }}.{{ .Values.global.proxy.externalUrlSuffix }}
  prefix: /
  service: {{ .Release.Name }}.{{ .Release.Namespace }}:{{ .Values.nodeConf.p2pPort }}
{{- end }}
